
* what is this?

this is my study of [[https://github.com/uim/uim][uim]] module, input japanese text kana and kanji.

it uses [[https://en.wikipedia.org/wiki/Cangjie_input_method][cangjie]] to input kanji, and support wildcard "*", "?".

* requirement

uim 1.8.6

* install

- copy *.scm to ~/.uim.d/plugin/
- run following command

#+BEGIN_SRC
$ uim-module-manager --register test0003 --path ~/.uim.d/plugin
#+END_SRC

* how to use?

- start in console
#+BEGIN_SRC
$ uim-fep -u test0003
#+END_SRC

- start in x
#+BEGIN_SRC
$ uim-xim --engine=test0003
#+END_SRC

- default key bindings

| key        | command                 |
|------------+-------------------------|
| space      | commit                  |
| alt-c      | toggle candidate window |
| alt-a      | toggle auto commit      |
| alt-w      | toggle wildcard         |
| alt-p      | toggle prediction       |
| alt-1 / f6 | switch to rule1         |
| alt-2 / f7 | switch to rule2         |
| alt-3 / f8 | switch to rule3         |
| alt-4      | switch to rule4         |
| ...        | ...                     |
| alt-9      | switch to rule9         |

* config

edit ~/.uim

#+BEGIN_SRC scheme
;;; example setting
;; on/off key
(define-key test0003-on-key? '("<Control>\\" "zenkaku-hankaku"))
(define-key test0003-off-key? '("<Control>\\" "zenkaku-hankaku"))
;; bind switch rule1 to F1
(define-key test0003-switch-rule1-key? "F1")
;; use only cangjie5 rule
(define my-rule1-setting
  (list
   '(label . c5)
   '(autocommit . #f)
   '(prediction . #t)
   '(wildcard . #t)
   (cons 'rulefile "/path/to/cangjie5-rule.data.scm")))
(define test0003-rule-list (list my-rule1-setting))
#+END_SRC

* use dynamic library (optional)

1. compile
  #+BEGIN_SRC
  $ make
  #+END_SRC

2. copy libuim-test0003.so to ~/.uim.d/plugin/

3. edit test0003.scm
replace test0003-make-cands-wildcard with test0003-lib-make-cands-wildcard.

* issue

- setting with uim-pref-* does not work.
- "*" in first character with large rule takes long time.
- project name.
- rule must be sorted.
- select candidate with numeric key is slow and inconvenient.
- large rule consume large memory.
